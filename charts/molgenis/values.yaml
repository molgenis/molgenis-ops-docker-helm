# Default values for molgenis
environment: test

ingress:
  enabled: true
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/proxy-body-size: 0
  path: /
  tls: []

image:
  repository: registry.hub.docker.com
  name: molgenis/molgenis-app
  tag: stable
runtimeEnvironment: production
# Sentry config. The format is https://{public key}@sentry.molgenis.org/{project id}
sentry:
  dsn: xxxx
python:
  executable: "/usr/bin/python3"
adminPassword: ""
adminEmail: no-reply@molgenis.org
mail:
  host: smtp.rug.nl
  # username: ""
  # password: ""
  port: 25
  protocol: smtp
  smtp:
    auth: false
opencpu: opencpu-opencpu.molgenis-opencpu
persistence:
  enabled: true
  storageClass: ""
  accessMode: ReadWriteOnce
  size: 5Gi
  # existingClaim: ""
resources:
  requests:
    cpu: 1
    memory: 2.5Gi
  limits:
    cpu: 1
    memory: 2.5Gi
catalinaOpts: "-XX:MaxRAMPercentage=80 -XX:+UseConcMarkSweepGC -XX:+CMSClassUnloadingEnabled"
maxFileMB: 150

oidc:
  enabled: true
  id: molgenis-auth
  name: molgenis-auth
  identification:
    issuerUri: https://auth.molgenis.org/.well-known/openid-configuration
    client_id: xxxxxx-xxxxxx-xxxxxxxx
    client_secret: xxxxxx-xxxxxx-xxxxxxxx
  claims:
    roles: roles
    vo_group:

commander:
  enabled: false
  image:
    repository: molgenis
    name: commander
    tag: latest
# script: |-
#   import data.csv

service:
  type: ClusterIP
  port: 8080

nodeSelector:
  deployPod: "true"
tolerations: []
affinity: {}

molgenis-frontend:
  enabled: true
  image:
    tag: latest
    repository: registry.hub.docker.com
  proxy:
    backend:
      service:
        enabled: true

molgenis-elasticsearch:
  enabled: true
  persistence:
    size: 5Gi
  resources:
    requests:
      cpu: 2
      memory: 2Gi
    limits:
      cpu: 2
      memory: 2Gi

postgresql:
  enabled: true
  image:
    tag: 11.6.0-debian-9-r28
    pullPolicy: IfNotPresent
  postgresqlExtendedConf:
    maxLocksPerTransaction: 1024
  postgresqlUsername: molgenis
  postgresqlPassword: molgenis
  postgresqlDatabase: molgenis
  persistence:
    # should always be set, the subchart cannot clean up the pvc it creates
    existingClaim: postgres-pvc
    # set to true if you really want to use a pre-existing claim
    existingClaimReally: false
    size: 5Gi
    accessMode: ReadWriteOnce
  resources:
    requests:
      cpu: 250m
      memory: 512Mi
    limits:
      cpu: 250m
      memory: 512Mi
  metrics:
    enabled: true

minio:
  enabled: true
  mcImage:
    tag: RELEASE.2021-03-12T03-36-59Z
  persistence:
    enabled: true
    size: 5Gi
  resources:
    requests:
      cpu: 250m
      memory: 256Mi
    limits:
      cpu: 250m
      memory: 256Mi
  defaultBucket:
    enabled: true
    name: molgenis
  environment:
    MINIO_REGION_NAME: ""
  service:
    annotations:
      prometheus.io/scrape: 'true'
      prometheus.io/path: '/minio/prometheus/metrics'
      prometheus.io/port: '9000'
  nodeSelector:
    deployPod: "true"
