# Default values for molgenis
ingress:
  enabled: true
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/proxy-body-size: 0
  path: /
  tls: []

image:
  repository: registry.hub.docker.com
  name: molgenis/molgenis-app
  tag: stable
environment: test
# Sentry config. The format is https://{public key}@sentry.molgenis.org/{project id}
sentry:
  dsn: xxxx
python:
  executable: "/usr/bin/python3"
admin:
  password: ""
  email: no-reply@molgenis.org
mail:
  host: smtp.rug.nl
  # username: ""
  # password: ""
  port: 25
  protocol: smtp
  smtp:
    auth: false
opencpu: opencpu-opencpu.molgenis-opencpu
persistence:
  enabled: true
  storageClass: ""
  accessMode: ReadWriteOnce
  size: 5Gi
  # existingClaim: ""
resources:
  requests:
    cpu:
    memory:
  limits:
    cpu: 1
    memory: 2.5Gi
catalinaOpts: "-XX:MaxRAMPercentage=80 -XX:+UseConcMarkSweepGC -XX:+CMSClassUnloadingEnabled"

service:
  type: ClusterIP
  port: 8080

nodeSelector:
  deployPod: "true"
tolerations: []
affinity: {}

molgenis-elasticsearch:
  enabled: true
  persistence:
    size: 5Gi
  resources:
    requests:
      cpu:
      memory:
    limits:
      cpu: 2
      memory: 2Gi

postgresql:
  enabled: true
  image:
    tag: 11.1.0-debian-9-r71
    pullPolicy: IfNotPresent
  ## Specify runtime config parameters as a dict, using camelCase
  ## ref: https://www.postgresql.org/docs/current/static/runtime-config.html
  configuration:
    maxLocksPerTransaction: 1024
  postgresqlUsername: molgenis
  postgresqlPassword: molgenis
  postgresqlDatabase: molgenis
  persistence:
    size: 5Gi
  resources:
    requests:
      cpu:
      memory:
    limits:
      cpu: 250m
      memory: 512Mi
  metrics:
    enabled: true

minio:
  enabled: true
  persistence:
    enabled: true
    retain: false
    size: 5Gi
  resources:
    requests:
      cpu:
      memory:
    limits:
      cpu: 250m
      memory: 256Mi
  defaultBucket:
    enabled: true
    name: molgenis
  minioConfig:
    region: ""
  service:
    annotations:
      prometheus.io/scrape: 'true'
      prometheus.io/path: '/minio/prometheus/metrics'
      prometheus.io/port: '9000'
