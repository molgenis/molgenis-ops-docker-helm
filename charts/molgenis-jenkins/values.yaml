jenkins:
  clusterZone: "edgecluster.local"
  master:
    image: "jenkins/jenkins"
    tag: "2.249.2"
    ingress:
      enabled: true
      hostName: jenkins.dev.molgenis.org
    jenkinsUrlProtocol: "https"
    serviceType: ClusterIP
    installPlugins:
      - slack:2.42
      - kubernetes:1.27.2
      - workflow-aggregator:2.6
      - workflow-job:2.40
      - credentials-binding:1.23
      - embeddable-build-status:2.0.3
      - git:4.4.4
      - github-branch-source:2.9.1
      - basic-branch-build-strategies:1.3.2
      - kubernetes-credentials-provider:0.15
      - blueocean:1.24.1
      - pipeline-github-lib:1.0
      - github-scm-trait-commit-skip:0.4.0
      - ansible:1.0
      - prometheus:2.0.7
      - github-pullrequest:0.2.8
      - token-macro:2.12
      - configuration-as-code:1.43
      - job-dsl:1.77
      - block-queued-job:0.2.0
      - build-token-root:1.7
      - oic-auth:1.8
      - role-strategy:3.1
    overwritePlugins: true
    resources:
      limits:
        cpu: 500m
        memory: 4096Mi
      requests:
        cpu: 500m
        memory: 2000Mi
    containerEnv:
      - name: "PREVIEW_JOB_AUTH_TOKEN"
        value: "ABCDEFG"
      - name: "GITHUB_ORG_NAME"
        value: "molgenis-jenkins"
      - name: "CLIENT_ID"
        value: "xxxx"
      - name: "CLIENT_SECRET"
        value: "xxxx"
    healthProbesLivenessTimeout: 5
    healthProbesReadinessTimeout: 5
    healthProbeLivenessPeriodSeconds: 10
    healthProbeReadinessPeriodSeconds: 10
    healthProbeLivenessFailureThreshold: 15
    healthProbeReadinessFailureThreshold: 3
    healthProbeLivenessInitialDelay: 300
    healthProbeReadinessInitialDelay: 300
    JCasC:
      configScripts:
        pipelinetools: |
          unclassified:
            globalLibraries:
              libraries:
              - defaultVersion: "master"
                implicit: true
                name: "molgenis-jenkins-pipeline"
                retriever:
                  modernSCM:
                    scm:
                      git:
                        credentialsId: "molgenis-jenkins-github-secret"
                        remote: "https://github.com/molgenis/molgenis-jenkins-pipeline.git"
                        traits:
                        - "gitBranchDiscovery"
        slack: |-
          unclassified:
            slackNotifier:
              botUser: false
              room: "#hubot"
              sendAsText: false
              teamDomain: "molgenisdev"
              tokenCredentialId: "molgenis-jenkins-slack-secret"
        jobs: |-
          jobs:
            - script: >
                pipelineJob('test-e2e-commander') {
                  description('The nightly MOLGENIS Commander integration tests')
                  definition {
                    cpsScm {
                      lightweight()
                      scm {
                        github('molgenis/molgenis-ops-helm', 'master')
                        scriptPath('charts/molgenis-jenkins/resources/tests/e2e-commander/Jenkinsfile')
                      }
                    }
                  }
                  triggers {
                    cron('TZ=Europe/Amsterdam\nH H(2-5) * * 1-5')
                  }
                }
            - script: >
                pipelineJob('test-nightly') {
                  description('The nightly build for MOLGENIS')
                  definition {
                    cpsScm {
                      lightweight()
                      scm {
                        github('molgenis/molgenis-ops-helm', 'master')
                        scriptPath('charts/molgenis-jenkins/resources/tests/nightly/Jenkinsfile')
                      }
                    }
                  }
                  triggers {
                    cron('TZ=Europe/Amsterdam\nH H(2-5) * * 1-5')
                  }
                }
            - script: >
                pipelineJob('preview') {
                  description('Preview a molgenis PR')
                  parameters {
                    choiceParam('ACTION', ['install', 'delete', 'list'], 'What action to perform')
                    stringParam('TAG', 'dev', 'The docker tag to deploy')
                  }
                  authenticationToken('${PREVIEW_JOB_AUTH_TOKEN}')
                  definition {
                    cpsScm {
                      lightweight()
                      scm {
                        github('molgenis/molgenis-ops-helm', 'master')
                        scriptPath('charts/molgenis-jenkins/resources/preview/Jenkinsfile')
                      }
                    }
                  }
                }
            - script: >
                organizationFolder('${GITHUB_ORG_NAME}') {
                  description('MOLGENIS projects in the MOLGENIS organization')
                  displayName('${GITHUB_ORG_NAME}')
                  triggers {
                      periodic(86400)
                  }
                  organizations {
                    github {
                      repoOwner('${GITHUB_ORG_NAME}')
                      apiUri("https://api.github.com")
                      credentialsId('molgenis-jenkins-github-secret')
                      scanCredentialsId('molgenis-jenkins-github-secret')
                    }
                  }
                  configure {
                    def traits = it / navigators / 'org.jenkinsci.plugins.github__branch__source.GitHubSCMNavigator' / traits
                    traits << 'jenkins.scm.impl.trait.RegexSCMSourceFilterTrait' {
                        regex 'molgenis.*'
                    }
                    traits << 'org.jenkinsci.plugins.github__branch__source.BranchDiscoveryTrait' {
                        strategyId 1
                    }
                    traits << 'org.jenkinsci.plugins.github__branch__source.OriginPullRequestDiscoveryTrait' {
                        strategyId 2
                    }
                    traits << 'org.jenkinsci.plugins.github__branch__source.ForkPullRequestDiscoveryTrait' {
                        strategyId 2
                        trust(class: 'org.jenkinsci.plugins.github_branch_source.ForkPullRequestDiscoveryTrait$TrustPermission')
                    }
                    traits << 'org.jenkinsci.plugins.scm__filter.GitHubCommitSkipTrait' {}
                    traits << 'jenkins.plugins.git.traits.LocalBranchTrait' {
                        extension(class: 'hudson.plugins.git.extensions.impl.LocalBranch') {
                            localBranch '**'
                        }
                    }
                    traits << 'jenkins.plugins.git.traits.UserIdentityTrait' {
                        extension(class: 'hudson.plugins.git.extensions.impl.UserIdentity') {
                            name 'MOLGENIS Jenkins'
                            email 'molgenis+ci@gmail.com'
                        }
                    }
                  }
                }
            - script: >
                organizationFolder('other') {
                  description('Non-MOLGENIS projects in the MOLGENIS organization')
                  displayName('Other')
                  triggers {
                      periodic(86400)
                  }
                  organizations {
                    github {
                      repoOwner('${GITHUB_ORG_NAME}')
                      apiUri("https://api.github.com")
                      credentialsId('molgenis-jenkins-github-secret')
                      scanCredentialsId('molgenis-jenkins-github-secret')
                    }
                  }
                  configure {
                    def traits = it / navigators / 'org.jenkinsci.plugins.github__branch__source.GitHubSCMNavigator' / traits
                    traits << 'jenkins.scm.impl.trait.RegexSCMSourceFilterTrait' {
                        regex '^(?!molgenis)(?!NGS)(?!GAP).*'
                    }
                    traits << 'org.jenkinsci.plugins.github__branch__source.BranchDiscoveryTrait' {
                        strategyId 1
                    }
                    traits << 'org.jenkinsci.plugins.github__branch__source.OriginPullRequestDiscoveryTrait' {
                        strategyId 2
                    }
                    traits << 'org.jenkinsci.plugins.github__branch__source.ForkPullRequestDiscoveryTrait' {
                        strategyId 2
                        trust(class: 'org.jenkinsci.plugins.github_branch_source.ForkPullRequestDiscoveryTrait$TrustPermission')
                    }
                    traits << 'org.jenkinsci.plugins.scm__filter.GitHubCommitSkipTrait' {}
                    traits << 'jenkins.plugins.git.traits.LocalBranchTrait' {
                        extension(class: 'hudson.plugins.git.extensions.impl.LocalBranch') {
                            localBranch '**'
                        }
                    }
                    traits << 'jenkins.plugins.git.traits.UserIdentityTrait' {
                        extension(class: 'hudson.plugins.git.extensions.impl.UserIdentity') {
                            name 'MOLGENIS Jenkins'
                            email 'molgenis+ci@gmail.com'
                        }
                    }
                  }
                }
        git: |
          unclassified:
            gitSCM:
              globalConfigEmail: "molgenis+ci@gmail.com"
              globalConfigName: "MOLGENIS Jenkins"
            gitHubPluginConfig:
              configs:
                - name: GitHub
                  manageHooks: false
                  credentialsId: "molgenis-jenkins-github-token-secret"
        security: |
          jenkins:
            securityRealm:
              oic:
                clientId: "${CLIENT_ID}"
                clientSecret: "${CLIENT_SECRET}"
                automanualconfigure: auto
                wellKnownOpenIDConfigurationUrl: https://auth.molgenis.org/.well-known/openid-configuration
                groupsFieldName: roles
                emailFieldName: email
                fullNameFieldName: name
            authorizationStrategy:
              roleBased:
                roles:
                  global:
                    - name: "admin"
                      description: "Jenkins administrators"
                      permissions:
                        - "Overall/Administer"
                      assignments:
                        - "admin"
                    - name: "readonly"
                      description: "Read-only users"
                      permissions:
                        - "Overall/Read"
                        - "Job/Read"
                      assignments:
                        - "reader"
    scriptApproval:
      - "staticMethod org.codehaus.groovy.runtime.DefaultGroovyMethods replaceAll java.lang.String java.util.regex.Pattern java.lang.String"
  rbac:
    readSecrets: true
  agent:
    podTemplates:
      shared: |
        - name: shared
          label: shared
          containers:
            - name: kaniko
              image: "gcr.io/kaniko-project/executor:debug-v0.7.0"
              command: cat
              args: ""
              ttyEnabled: true
            - name: rancher
              image: "rancher/cli2:v2.2.0"
              command: cat
              args: ""
              ttyEnabled: true
              envVars:
                - envVar:
                    key: HOME
                    value: /home/jenkins/agent
            - name: vault
              image: "vault:1.3.1"
              command: cat
              args: ""
              ttyEnabled: true
              envVars:
                - envVar:
                    key: VAULT_SKIP_VERIFY
                    value: 1
                - secretEnvVar:
                    key: VAULT_TOKEN
                    secretName: molgenis-pipeline-vault-secret
                    secretKey: token
                - secretEnvVar:
                    key: VAULT_ADDR
                    secretName: molgenis-pipeline-vault-secret
                    secretKey: addr
            - name: sonar
              image: "molgenis/sonarqube-scanner:1.0.1"
              command: cat
              args: ""
              ttyEnabled: true
          envVars:
            - envVar:
                key: "npm_config_registry"
                value: "https://registry.molgenis.org/repository/npm-central/"
            - envVar:
                key: LOCAL_REGISTRY
                value: registry.molgenis.org
            - envVar:
                key: DOCKER_REGISTRY
                value: registry.hub.docker.com
            - envVar:
                key: HELM_REPO
                value: https://registry.molgenis.org/repository/helm/
            - envVar:
                key: HELM_REPOSITORY
                value: https://helm.molgenis.org/
          nodeUsageMode: NORMAL
          volumes:
            - hostPathVolume:
                hostPath: "/var/run/docker.sock"
                mountPath: "/var/run/docker.sock"
      molgenis-jdk8: |
        - name: molgenis-jdk8
          label: molgenis-jdk8
          inheritFrom: shared
          nodeUsageMode: EXCLUSIVE
          containers:
            - name: maven
              image: "molgenis/maven-jdk8:maven-jdk8-release-2019-12-24_12-50-19"
              command: cat
              args: ""
              ttyEnabled: true
              resourceRequestCpu: "1"
              resourceRequestMemory: "4Gi"
              envVars:
                - envVar:
                    key: MAVEN_OPTS
                    value: "-Duser.home=/home/jenkins/agent"
                - envVar:
                    key: MAVEN_CONFIG
                    value: "/home/jenkins/agent/.m2"
                - envVar:
                    key: HOME
                    value: /home/jenkins/agent
      molgenis-jdk11: |
        - name: molgenis-jdk11
          label: molgenis-jdk11
          inheritFrom: shared
          nodeUsageMode: EXCLUSIVE
          containers:
            - name: maven
              image: "molgenis/maven-jdk11:maven-jdk11-release-2019-05-07_09-20-11"
              command: cat
              args: ""
              ttyEnabled: true
              resourceRequestCpu: "1"
              resourceRequestMemory: "4Gi"
              envVars:
                - envVar:
                    key: MAVEN_OPTS
                    value: "-Duser.home=/home/jenkins/agent"
                - envVar:
                    key: MAVEN_CONFIG
                    value: "/home/jenkins/agent/.m2"
                - envVar:
                    key: HOME
                    value: /home/jenkins/agent
      node: |
        - name: node
          label: node-carbon
          nodeUsageMode: EXCLUSIVE
          inheritFrom: shared
          containers:
            - name: node
              image: "molgenis/node-carbon:1.1.0"
              command: cat
              args: ""
              ttyEnabled: true
              resourceRequestCpu: "1"
              resourceRequestMemory: "1Gi"
      node-dubnium: |
        - name: node-dubnium
          label: node-dubnium
          nodeUsageMode: EXCLUSIVE
          inheritFrom: shared
          containers:
            - name: node
              image: "molgenis/node-dubnium:1.1.0"
              command: cat
              args: ""
              ttyEnabled: true
              resourceRequestCpu: "1"
              resourceRequestMemory: "1Gi"
          envVars:
            - envVar:
                key: NPM_REGISTRY
                value: registry.npmjs.org
            - envVar:
                key: NPM_LOCAL_REGISTRY
                value: registry.molgenis.org/repository/npm-hosted
      node-erbium: |
        - name: node-erbium
          label: node-erbium
          nodeUsageMode: EXCLUSIVE
          inheritFrom: shared
          containers:
            - name: node
              image: "molgenis/node-erbium:1.1.0"
              command: cat
              args: ""
              ttyEnabled: true
              resourceRequestCpu: "1"
              resourceRequestMemory: "1Gi"
      node-fermium: |
        - name: node-fermium
          label: node-fermium
          nodeUsageMode: EXCLUSIVE
          inheritFrom: shared
          containers:
            - name: node
              image: "molgenis/node-fermium:1.0.0"
              command: cat
              args: ""
              ttyEnabled: true
              resourceRequestCpu: "1"
              resourceRequestMemory: "1Gi"
      python: |
        - name: python
          label: python-stretch
          nodeUsageMode: EXCLUSIVE
          inheritFrom: shared
          containers:
            - name: python
              image: "python:stretch"
              command: cat
              args: ""
              ttyEnabled: true
              resourceRequestCpu: "100m"
              resourceRequestMemory: "250Mi"
              resourceLimitMemory: "512Mi"
          envVars:
            - envVar:
                key: PYPI_REGISTRY
                value: https://upload.pypi.org/legacy/
            - envVar:
                key: PYPI_LOCAL_REGISTRY
                value: https://registry.molgenis.org/repository/pypi/
      molgenis-it-jdk11: |
        - name: molgenis-it-jdk11
          label: molgenis-it-jdk11
          nodeUsageMode: EXCLUSIVE
          inheritFrom: molgenis-jdk11
          containers:
            - name: elasticsearch
              image: docker.elastic.co/elasticsearch/elasticsearch:5.5.3
              workingDir: ""
              command: ""
              args: ""
              resourceRequestCpu: "100m"
              resourceRequestMemory: "1Gi"
              resourceLimitMemory: "1500Mi"
              envVars:
                - envVar:
                    key: ES_JAVA_OPTS
                    value: '-Xms512m -Xmx512m'
                - envVar:
                    key: cluster.name
                    value: molgenis
                - envVar:
                    key: bootstrap.memory_lock
                    value: 'true'
                - envVar:
                    key: xpack.security.enabled
                    value: 'false'
                - envVar:
                    key: xpack.monitoring.enabled
                    value: 'false'
                - envVar:
                    key: xpack.watcher.enabled
                    value: 'false'
                - envVar:
                    key: discovery.type
                    value: single-node
            - name: postgres
              image: postgres:11-alpine
              workingDir: ""
              command: ""
              args: ""
              resourceRequestCpu: "100m"
              resourceRequestMemory: "250Mi"
              resourceLimitMemory: "250Mi"
              envVars:
                - envVar:
                    key: POSTGRES_USER
                    value: molgenis
                - envVar:
                    key: POSTGRES_PASSWORD
                    value: molgenis
                - envVar:
                    key: POSTGRES_DB
                    value: molgenis
            - name: opencpu
              image: "molgenis/opencpu:opencpu-release-2019-03-06_08-18-10"
              ttyEnabled: true
              resourceRequestCpu: "100m"
              resourceRequestMemory: "256Mi"
              resourceLimitMemory: "512Mi"
      molgenis-emx2: |
        - name: molgenis-emx2
          label: molgenis-emx2
          inheritFrom: shared
          nodeUsageMode: EXCLUSIVE
          containers:
            - name: java
              image: "openjdk:13-alpine"
              command: cat
              args: ""
              resourceRequestCpu: "1"
              resourceRequestMemory: "1Gi"
            - name: postgres
              image: postgres:13-alpine
              workingDir: ""
              command: ""
              args: "-c shared_buffers=256MB -c max_locks_per_transaction=1024"
              resourceRequestCpu: "100m"
              resourceRequestMemory: "1Gi"
              resourceLimitMemory: "1Gi"
              envVars:
                - envVar:
                    key: POSTGRES_USER
                    value: molgenis
                - envVar:
                    key: POSTGRES_PASSWORD
                    value: molgenis
                - envVar:
                    key: POSTGRES_DB
                    value: molgenis
      site-gen: |
        - name: site-gen
          label: site-gen
          nodeUsageMode: EXCLUSIVE
          inheritFrom: shared
          containers:
            - name: jekyll
              image: "molgenis/jekyll:jekyll-release-2019-03-06_08-18-10"
              ttyEnabled: true
              command: "cat"
              args: ""
      ansible: |
        - name: ansible
          label: ansible
          inheritFrom: shared
          nodeUsageMode: EXCLUSIVE
          containers:
            - name: centos-6
              image: "centos:6.10"
              ttyEnabled: true
              command: "/bin/bash"
              args: ""
      r-3.5.2: |
        - name: r-3.5.2
          label: r-3.5.2
          inheritFrom: shared
          nodeUsageMode: EXCLUSIVE
          containers:
            - name: r
              image: "rocker/verse:3.5.2"
              ttyEnabled: true
              command: "cat"
              args: ""
            - name: curl
              image: "appropriate/curl:latest"
              ttyEnabled: true
              command: "cat"
              args: ""
      r-3.6.2: |
        - name: r-3.6.2
          label: r-3.6.2
          inheritFrom: shared
          nodeUsageMode: EXCLUSIVE
          containers:
            - name: r
              image: "rocker/verse:3.6.2"
              ttyEnabled: true
              command: "cat"
              args: ""
            - name: curl
              image: "appropriate/curl:latest"
              ttyEnabled: true
              command: "cat"
              args: ""
      r-4.0.3: |
        - name: r-4.0.3
          label: r-4.0.3
          inheritFrom: shared
          nodeUsageMode: EXCLUSIVE
          containers:
            - name: r
              image: "rocker/verse:4.0.3"
              ttyEnabled: true
              command: "cat"
              args: ""
            - name: curl
              image: "appropriate/curl:latest"
              ttyEnabled: true
              command: "cat"
              args: ""
      helm: |
        - name: helm
          label: helm
          inheritFrom: shared
          nodeUsageMode: EXCLUSIVE
          containers:
            - name: chart-testing
              image: "quay.io/helmpack/chart-testing:v2.2.0"
              ttyEnabled: true
              command: "cat"
              args: ""
            - name: alpine
              image: "spotify/alpine"
              ttyEnabled: true
              command: "cat"
              args: ""


# secret contains configuration for the kubernetes secrets that jenkins can access
secret:
  # Jenkins CI integration on slack, see https://molgenisdev.slack.com/services/B01C7ENKVRQ
  slack: 'xxxx'
  # vault configures the vault secret
  vault:
    token: 'xxxx'
    # local vault: 'https://vault-operator.vault-operator.svc:8200'
    # But for cross-cluster access use the node port:
    addr: 'http://192.168.64.161:30543'
  # githubToken contains access token for jenkins bot account on github.com
  gitHub:
    user: 'molgenis-jenkins'
    token: 'xxxx'
  # registry contains credentials for registry.molgenis.org
  registry:
    user: 'admin'
    password: 'xxxx'
  # dockerHubPassword contains password for hub.docker.com
  dockerHub:
    user: 'molgenisci'
    password: 'xxxx'
