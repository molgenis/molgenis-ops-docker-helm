pipeline {
    agent {
        kubernetes {
            label 'python-stretch'
        }
    }
    stages {
        stage("Deploy") {
            when {
                equals expected: 'install', actual: params.ACTION
            }
            steps {
                container('vault') {
                    sh "mkdir /home/jenkins/.rancher"
                    sh(script: 'vault read -field=value secret/ops/jenkins/rancher/cli2.json > /home/jenkins/.rancher/cli2.json')
                }
                container('rancher') {
                    sh "rancher context switch dev-molgenis"
                    sh "rancher apps install " +
                            "-n preview-${TAG.toLowerCase()} " +
                            "molgenis " +
                            "preview-${TAG.toLowerCase()} " +
                            "--no-prompt " +
                            "--set adminPassword=admin " +
                            "--set molgenis-proxy.environment=dev " +
                            "--set image.tag=${TAG} " +
                            "--set image.repository=${LOCAL_REGISTRY} " +
                            "--set image.pullPolicy=Always"
                }
                container('python'){
                    timeout(8) {
                        waitUntil {
                           sleep(time:30, unit:'SECONDS')
                           script {
                              def r = sh(script: "wget -q https://preview-${TAG}.dev.molgenis.org -O /dev/null", returnStatus: true)
                              return (r == 0);
                           }
                        }
                    }
                }
                hubotSend message: "Deployed https://preview-${TAG}.dev.molgenis.org"
            }
        }
        stage("Delete") {
            when {
                equals expected: 'delete', actual: params.ACTION
            }
            steps {
                container('vault') {
                    sh "mkdir /home/jenkins/.rancher"
                    sh(script: 'vault read -field=value secret/ops/jenkins/rancher/cli2.json > /home/jenkins/.rancher/cli2.json')
                }
                container('rancher') {
                    sh "rancher context switch dev-molgenis"
                    sh "rancher apps delete preview-${TAG.toLowerCase()}"
                }
                hubotSend message: "Deleted preview-${TAG.toLowerCase()}"
            }
        }
        stage("List") {
            when {
                equals expected: 'list', actual: params.ACTION
            }
            steps {
                container('vault') {
                    sh "mkdir /home/jenkins/.rancher"
                    sh(script: 'vault read -field=value secret/ops/jenkins/rancher/cli2.json > /home/jenkins/.rancher/cli2.json')
                }
                container('rancher') {
                    sh "rancher context switch dev-molgenis"
                    script {
                        env.LIST = sh script:"rancher apps ls", returnStdout: true
                    }
                }
                hubotSend message: "Dit draait er allemaal:\n```${LIST}```"
            }
        }
    }
}
